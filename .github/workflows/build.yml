name: Build

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
  release:
    types: [ published ]
    
env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience to skip caching NuGet packages and speed up the build.
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending .NET CLI telemetry to Microsoft.
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:
    name: Build-${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build -c Release --no-restore
    - name: Pack
      run: dotnet pack -c Release --output nupkgs --no-build
    - name: Publish Artifacts
      uses: actions/upload-artifact@v3.1.0
      with:
        name: ${{matrix.os}}
        path: "./nupkgs/*.nupkg"
        
  push-github:
    name: Push GitHub Package
    needs: build
    if: github.ref == 'refs/heads/main' || github.event_name == 'release'
    environment:
      name: "GitHub"
      url: https://github.com/${{ github.repository }}/packages
    permissions:
      packages: write
    runs-on: windows-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3.0.2
        with:
          name: "windows-latest"
      - name: Dotnet NuGet Add Source
        run: dotnet nuget add source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --name GitHub --username ${{ github.repository_owner }} --password ${{ secrets.GH_PACKAGES_TOKEN }}
        shell: pwsh
      - name: Dotnet NuGet Push
        run: dotnet nuget push .\*.nupkg --api-key ${{ github.token }} --source GitHub --skip-duplicate
        shell: pwsh

  push-nuget:
    name: Push NuGet Package
    needs: build
    if: github.event_name == 'release'
    environment:
      name: "NuGet"
      url: https://www.nuget.org/packages/Tailwind.MSBuild
    runs-on: windows-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3.0.2
        with:
          name: "windows-latest"
      - name: Dotnet NuGet Push
        run: |
          Get-ChildItem .\ -Filter *.nupkg |
          Where-Object { !$_.Name.Contains('preview') } |
          ForEach-Object { dotnet nuget push $_ --source https://api.nuget.org/v3/index.json --skip-duplicate --api-key ${{secrets.NUGET_API_KEY}} }
        shell: pwsh
